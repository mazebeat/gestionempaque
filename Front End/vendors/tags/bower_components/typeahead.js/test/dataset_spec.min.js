describe("Dataset",function(){var e=["grape","coconut","cake","tea","coffee"],c=[{value:"grape"},{value:"coconut"},{value:"cake"},{value:"tea"},{value:"coffee"}],d={g:["grape"],c:["coconut","cake","coffee"],t:["tea"]},g={grape:f("grape"),coconut:f("coconut"),cake:f("cake"),tea:f("tea"),coffee:f("coffee")},b={status:200,responseText:JSON.stringify(e)},a={getMiss:function(){return null},getHit:function(h){if(/itemHash/.test(h)){return g}else{if(/adjacencyList/.test(h)){return d}else{if(/thumbprint/.test(h)){return VERSION}else{if(/protocol/.test(h)){return utils.getProtocol()}}}}}};beforeEach(function(){jasmine.Ajax.useMock();jasmine.PersistentStorage.useMock();jasmine.Transport.useMock();spyOn(utils,"getUniqueId").andCallFake(function(h){return h})});afterEach(function(){clearAjaxRequests()});describe("#constructor",function(){describe("when called with a name",function(){beforeEach(function(){this.dataset=new Dataset({name:"#constructor",local:e})});it("should initialize persistent storage",function(){expect(this.dataset.storage).toBeDefined();expect(PersistentStorage).toHaveBeenCalled()})});describe("when called with no name",function(){beforeEach(function(){this.dataset=new Dataset({local:e})});it("should not use persistent storage",function(){expect(this.dataset.storage).toBeNull();expect(PersistentStorage).not.toHaveBeenCalled()})});describe("when called with a template but no engine",function(){beforeEach(function(){this.fn=function(){var h=new Dataset({template:"t"})}});it("should throw an error",function(){expect(this.fn).toThrow()})});describe("when called without local, prefetch, or remote",function(){beforeEach(function(){this.fn=function(){this.dataset=new Dataset()}});it("should throw an error",function(){expect(this.fn).toThrow()})});describe("when called with no template",function(){beforeEach(function(){this.dataset=new Dataset({local:e})});it("should compile default template",function(){expect(this.dataset.template({value:"boo"})).toBe("<p>boo</p>")})});describe("when called with a template and engine",function(){beforeEach(function(){this.spy=jasmine.createSpy().andReturn({render:function(){return"boo!"}});this.dataset=new Dataset({local:e,template:"t",engine:{compile:this.spy}})});it("should compile the template",function(){expect(this.spy).toHaveBeenCalledWith("t");expect(this.dataset.template()).toBe("boo!")})});describe("when called with a compiled template",function(){beforeEach(function(){this.dataset=new Dataset({local:e,template:$.noop})});it("should use it",function(){expect(this.dataset.template).toBe($.noop)})})});describe("#initialize",function(){it("should return Deferred instance",function(){var h;this.dataset=new Dataset({local:e});h=this.dataset.initialize();expect(h.fail).toBeDefined();expect(h.done).toBeDefined();expect(h.always).toBeDefined()});describe("when called with local",function(){beforeEach(function(){this.dataset1=new Dataset({local:e});this.dataset2=new Dataset({local:c});this.dataset1.initialize();this.dataset2.initialize()});it("should process and merge the data",function(){expect(this.dataset1.itemHash).toEqual(g);expect(this.dataset1.adjacencyList).toEqual(d);expect(this.dataset2.itemHash).toEqual(g);expect(this.dataset2.adjacencyList).toEqual(d)})});describe("when called with prefetch",function(){describe("if data is available in storage",function(){beforeEach(function(){this.dataset=new Dataset({name:"prefetch",prefetch:"/prefetch.json"});this.dataset.storage.get.andCallFake(a.getHit);this.dataset.initialize()});it("should not make ajax request",function(){expect(mostRecentAjaxRequest()).toBeNull()});it("should use data from storage",function(){expect(this.dataset.itemHash).toEqual(g);expect(this.dataset.adjacencyList).toEqual(d)})});describe("if data is not available in storage",function(){var h=24*60*60*1000;describe("if filter was passed in",function(){var j={f:["filter"]},i={filter:f("filter")};beforeEach(function(){this.dataset=new Dataset({name:"prefetch",prefetch:{url:"/prefetch.json",filter:function(k){return["filter"]}}});this.dataset.storage.get.andCallFake(a.getMiss);this.dataset.initialize();this.request=mostRecentAjaxRequest();this.request.response(b)});it("should make ajax request",function(){expect(this.request).not.toBeNull()});it("should process and merge fileered data",function(){expect(this.dataset.adjacencyList).toEqual(j);expect(this.dataset.itemHash).toEqual(i)});it("should store processed data in storage",function(){expect(this.dataset.storage.set).toHaveBeenCalledWith("itemHash",i,h);expect(this.dataset.storage.set).toHaveBeenCalledWith("adjacencyList",j,h)});it("should store metadata in storage",function(){expect(this.dataset.storage.set).toHaveBeenCalledWith("protocol",utils.getProtocol(),h);expect(this.dataset.storage.set).toHaveBeenCalledWith("thumbprint",VERSION,h)})});describe("if filter was not passed in",function(){beforeEach(function(){this.dataset=new Dataset({name:"prefetch",prefetch:"/prefetch.json"});this.dataset.storage.get.andCallFake(a.getMiss);this.dataset.initialize();this.request=mostRecentAjaxRequest();this.request.response(b)});it("should make ajax request",function(){expect(this.request).not.toBeNull()});it("should process and merge fetched data",function(){expect(this.dataset.itemHash).toEqual(g);expect(this.dataset.adjacencyList).toEqual(d)});it("should store processed data in storage",function(){expect(this.dataset.storage.set).toHaveBeenCalledWith("itemHash",g,h);expect(this.dataset.storage.set).toHaveBeenCalledWith("adjacencyList",d,h)});it("should store metadata in storage",function(){expect(this.dataset.storage.set).toHaveBeenCalledWith("protocol",utils.getProtocol(),h);expect(this.dataset.storage.set).toHaveBeenCalledWith("thumbprint",VERSION,h)})})})});describe("when called with remote",function(){beforeEach(function(){this.dataset=new Dataset({remote:"/remote"});this.dataset.initialize()});it("should initialize the transport",function(){expect(Transport).toHaveBeenCalledWith("/remote")})})});describe("#getSuggestions",function(){describe("when length of query is less than minLength",function(){beforeEach(function(){this.spy=jasmine.createSpy();this.dataset=new Dataset({local:e,minLength:3});this.dataset.initialize()});it("should be a noop",function(){this.dataset.getSuggestions("co",this.spy);expect(this.spy).not.toHaveBeenCalled()})})});describe("Matching, combining, returning results",function(){beforeEach(function(){this.dataset=new Dataset({local:e,remote:"/remote"});this.dataset.initialize()});it("network requests are not triggered with enough local results",function(){this.dataset.limit=3;this.dataset.getSuggestions("c",function(h){expect(h).toEqual([f("coconut"),f("cake"),f("coffee")])});expect(this.dataset.transport.get).not.toHaveBeenCalled();this.dataset.limit=100;this.dataset.getSuggestions("c",function(h){expect(h).toEqual([f("coconut"),f("cake"),f("coffee")])});expect(this.dataset.transport.get).toHaveBeenCalled()});it("matches",function(){this.dataset.getSuggestions("c",function(h){expect(h).toEqual([f("coconut"),f("cake"),f("coffee")])})});it("does not match",function(){this.dataset.getSuggestions("q",function(h){expect(h).toEqual([])})});it("does not match multiterm queries",function(){this.dataset.getSuggestions("coff ca",function(h){expect(h).toEqual([])})});it("concatenates local and remote results and dedups them",function(){var h=jasmine.createSpy(),i=[c[0],e[2]];this.dataset.transport.get.andCallFake(function(k,j){utils.defer(function(){j(i)})});this.dataset.getSuggestions("c",h);waitsFor(function(){return h.callCount===2});runs(function(){expect(h.argsForCall[0][0]).toEqual([g.coconut,g.cake,g.coffee]);expect(h.argsForCall[1][0]).toEqual([g.coconut,g.cake,g.coffee,g.grape])})})});describe("tokenization",function(){describe("with datum strings",function(){var h=["course-106","user_name","One-Two","two three"];beforeEach(function(){this.dataset=new Dataset({local:h});this.dataset.initialize()});it("normalizes capitalization to match items",function(){this.dataset.getSuggestions("Cours",function(i){expect(i).toEqual([f("course-106")])});this.dataset.getSuggestions("cOuRsE 106",function(i){expect(i).toEqual([f("course-106")])});this.dataset.getSuggestions("one two",function(i){expect(i).toEqual([f("One-Two")])});this.dataset.getSuggestions("THREE TWO",function(i){expect(i).toEqual([f("two three")])})});it("matches items with dashes",function(){this.dataset.getSuggestions("106 course",function(i){expect(i).toEqual([f("course-106")])});this.dataset.getSuggestions("course-106",function(i){expect(i).toEqual([])})});it("matches items with underscores",function(){this.dataset.getSuggestions("user name",function(i){expect(i).toEqual([f("user_name")])})})})});describe("with datum objects",function(){var h=[{value:"course-106"}];beforeEach(function(){this.dataset=new Dataset({local:h});this.dataset.initialize()});it("matches items with dashes",function(){this.dataset.getSuggestions("106 course",function(i){expect(i).toEqual([f("course-106")])});this.dataset.getSuggestions("course-106",function(i){expect(i).toEqual([])})})});function f(h){return{value:h,tokens:utils.tokenizeText(h),datum:{value:h}}}});