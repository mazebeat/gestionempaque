var semver=require("semver"),f=require("util").format,jsFiles=["src/version.js","src/utils.js","src/event_target.js","src/event_bus.js","src/persistent_storage.js","src/request_cache.js","src/transport.js","src/dataset.js","src/input_view.js","src/dropdown_view.js","src/typeahead_view.js","src/typeahead.js"];module.exports=function(a){a.initConfig({version:a.file.readJSON("package.json").version,buildDir:"dist",banner:["/*!"," * typeahead.js <%= version %>"," * https://github.com/twitter/typeahead"," * Copyright 2013 Twitter, Inc. and other contributors; Licensed MIT"," */\n\n"].join("\n"),uglify:{options:{banner:"<%= banner %>",enclose:{"window.jQuery":"$"}},js:{options:{mangle:false,beautify:true,compress:false},src:jsFiles,dest:"<%= buildDir %>/typeahead.js"},jsmin:{options:{mangle:true,compress:true},src:jsFiles,dest:"<%= buildDir %>/typeahead.min.js"}},sed:{version:{pattern:"%VERSION%",replacement:"<%= version %>",path:["<%= uglify.js.dest %>","<%= uglify.jsmin.dest %>"]}},jshint:{options:{jshintrc:".jshintrc"},src:jsFiles,tests:["test/*.js"],gruntfile:["Gruntfile.js"]},watch:{js:{files:jsFiles,tasks:"build:js"}},jasmine:{js:{src:jsFiles,options:{specs:"test/*_spec.js",helpers:"test/helpers/*",vendor:"test/vendor/*"}}},exec:{open_spec_runner:{cmd:"open _SpecRunner.html"},git_is_clean:{cmd:'test -z "$(git status --porcelain)"'},git_on_master:{cmd:"test $(git symbolic-ref --short -q HEAD) = master"},git_add:{cmd:"git add ."},git_commit:{cmd:function(b){return f('git commit -m "%s"',b)}},git_tag:{cmd:function(b){return f('git tag v%s -am "%s"',b,b)}},git_push:{cmd:"git push && git push --tags"},publish_assets:{cmd:["cp -r <%= buildDir %> typeahead.js","zip -r typeahead.js/typeahead.js.zip typeahead.js","git checkout gh-pages","rm -rf releases/latest","cp -r typeahead.js releases/<%= version %>","cp -r typeahead.js releases/latest","git add releases/<%= version %> releases/latest","sed -E -i \"\" 's/v[0-9]+\\.[0-9]+\\.[0-9]+/v<%= version %>/' index.html","git add index.html",'git commit -m "Add assets for <%= version %>."',"git push","git checkout -","rm -rf typeahead.js"].join(" && ")}},clean:{dist:"dist"},connect:{server:{options:{port:8888,keepalive:true}}},parallel:{dev:[{grunt:true,args:["server"]},{grunt:true,args:["watch"]}]}});a.registerTask("release","Ship it.",function(b){var c=a.config.get("version");b=semver.inc(c,b)||b;if(!semver.valid(b)||semver.lte(b,c)){a.fatal("invalid version dummy")}a.config.set("version",b);a.task.run(["exec:git_on_master","exec:git_is_clean","lint","test","manifests:"+b,"build","exec:git_add","exec:git_commit:"+b,"exec:git_tag:"+b,"exec:git_push","exec:publish_assets"])});a.registerTask("manifests","Update manifests.",function(b){var e=a.util._,d=a.file.readJSON("package.json"),c=a.file.readJSON("component.json"),g=a.file.readJSON("typeahead.js.jquery.json");c=JSON.stringify(e.extend(c,{name:d.name,version:b}),null,2);g=JSON.stringify(e.extend(g,{name:d.name,title:d.name,version:b,author:d.author,description:d.description,keywords:d.keywords,homepage:d.homepage,bugs:d.bugs,maintainers:d.contributors}),null,2);d=JSON.stringify(e.extend(d,{version:b}),null,2);a.file.write("package.json",d);a.file.write("component.json",c);a.file.write("typeahead.js.jquery.json",g)});a.registerTask("default","build");a.registerTask("build",["uglify","sed:version"]);a.registerTask("server","connect:server");a.registerTask("lint","jshint");a.registerTask("test","jasmine:js");a.registerTask("test:browser",["jasmine:js:build","exec:open_spec_runner"]);a.registerTask("dev","parallel:dev");a.loadNpmTasks("grunt-sed");a.loadNpmTasks("grunt-exec");a.loadNpmTasks("grunt-parallel");a.loadNpmTasks("grunt-contrib-watch");a.loadNpmTasks("grunt-contrib-clean");a.loadNpmTasks("grunt-contrib-uglify");a.loadNpmTasks("grunt-contrib-jshint");a.loadNpmTasks("grunt-contrib-concat");a.loadNpmTasks("grunt-contrib-connect");a.loadNpmTasks("grunt-contrib-jasmine")};