module.exports=function(b){b.initConfig({pkg:b.file.readJSON("package.json"),banner:'/**\n* <%= pkg.name %>.js v<%= pkg.version %> by @fat and @mdo\n* Copyright <%= grunt.template.today("yyyy") %> <%= pkg.author %>\n* <%= _.pluck(pkg.licenses, "url").join(", ") %>\n*/\n',jqueryCheck:'if (!jQuery) { throw new Error("Bootstrap requires jQuery") }\n\n',clean:{dist:["dist"]},jshint:{options:{jshintrc:"js/.jshintrc"},gruntfile:{src:"Gruntfile.js"},src:{src:["js/*.js"]},test:{src:["js/tests/unit/*.js"]}},concat:{options:{banner:"<%= banner %><%= jqueryCheck %>",stripBanners:false},bootstrap:{src:["js/transition.js","js/alert.js","js/button.js","js/carousel.js","js/collapse.js","js/dropdown.js","js/modal.js","js/tooltip.js","js/popover.js","js/scrollspy.js","js/tab.js","js/affix.js"],dest:"dist/js/<%= pkg.name %>.js"}},uglify:{options:{banner:"<%= banner %>"},bootstrap:{src:["<%= concat.bootstrap.dest %>"],dest:"dist/js/<%= pkg.name %>.min.js"}},recess:{options:{compile:true},bootstrap:{src:["less/bootstrap.less"],dest:"dist/css/<%= pkg.name %>.css"},min:{options:{compress:true},src:["less/bootstrap.less"],dest:"dist/css/<%= pkg.name %>.min.css"},theme:{src:["less/theme.less"],dest:"dist/css/<%= pkg.name %>-theme.css"},theme_min:{options:{compress:true},src:["less/theme.less"],dest:"dist/css/<%= pkg.name %>-theme.min.css"}},copy:{fonts:{expand:true,src:["fonts/*"],dest:"dist/"}},qunit:{options:{inject:"js/tests/unit/phantom.js"},files:["js/tests/*.html"]},connect:{server:{options:{port:3000,base:"."}}},jekyll:{docs:{}},validation:{options:{reset:true},files:{src:["_gh_pages/**/*.html"]}},watch:{src:{files:"<%= jshint.src.src %>",tasks:["jshint:src","qunit"]},test:{files:"<%= jshint.test.src %>",tasks:["jshint:test","qunit"]},recess:{files:"less/*.less",tasks:["recess"]}}});b.loadNpmTasks("grunt-contrib-clean");b.loadNpmTasks("grunt-contrib-concat");b.loadNpmTasks("grunt-contrib-connect");b.loadNpmTasks("grunt-contrib-copy");b.loadNpmTasks("grunt-contrib-jshint");b.loadNpmTasks("grunt-contrib-qunit");b.loadNpmTasks("grunt-contrib-uglify");b.loadNpmTasks("grunt-contrib-watch");b.loadNpmTasks("grunt-html-validation");b.loadNpmTasks("grunt-jekyll");b.loadNpmTasks("grunt-recess");b.loadNpmTasks("browserstack-runner");b.registerTask("validate-html",["jekyll","validation"]);var a=["dist-css","jshint","qunit","validate-html"];if(process.env.TRAVIS){if((process.env.TRAVIS_REPO_SLUG==="twbs/bootstrap"&&process.env.TRAVIS_PULL_REQUEST==="false")||process.env.TWBS_HAVE_OWN_BROWSERSTACK_KEY){a.push("browserstack_runner")}}b.registerTask("test",a);b.registerTask("dist-js",["concat","uglify"]);b.registerTask("dist-css",["recess"]);b.registerTask("dist-fonts",["copy"]);b.registerTask("dist",["clean","dist-css","dist-fonts","dist-js"]);b.registerTask("default",["test","dist","build-customizer"]);b.registerTask("build-customizer","Add scripts/less files to customizer.",function(){var c=require("fs");function d(g){var h={};c.readdirSync(g).filter(function(i){return g=="fonts"?true:new RegExp("\\."+g+"$").test(i)}).forEach(function(i){return h[i]=c.readFileSync(g+"/"+i,"utf8")});return"var __"+g+" = "+JSON.stringify(h)+"\n"}var f=c.readFileSync("customize.html","utf-8");var e=d("js")+d("less")+d("fonts");c.writeFileSync("assets/js/raw-files.js",e)})};