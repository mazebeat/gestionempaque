var doc=this["document"];var fs=require("fs");var passed=0;var failed=0;if(!this["output"]){var output=function(a){return doc?doc.write(a+"<br/>"):console.log(a)}}var Hogan=require(__dirname+"/../lib/hogan");var template=fs.readFileSync(__dirname+"/../lib/template.js").toString();var compiler=fs.readFileSync(__dirname+"/../lib/compiler.js").toString();var mustache_wrapper=fs.readFileSync(__dirname+"/../wrappers/mustache.js.mustache").toString();var engines=(new Function(Hogan.compile(mustache_wrapper).render({template:template,compiler:compiler})+"; return {Hogan: Hogan, Mustache: Mustache};"))();var Mustache=engines.Mustache;var Hogan2=engines.Hogan;is(Mustache.hasOwnProperty("to_html"),true,"Mustache has to_html method.");var context={foo:"bar",mypartial:{baz:"qux"}};var text="abc {{foo}} def {{>mypartial}} ghi";var partialText="{{baz}}";var s=Mustache.to_html(text,context,{mypartial:partialText});is(s,"abc bar def qux ghi","Correct emulation of Mustache.js partial-name-in-context resolution.");var t=Hogan2.compile(text);s=t.render(context,{mypartial:partialText});is(s,"abc bar def  ghi","Hogan behavior not changed by Mustache.js emulation.");var buf="";function send(a){buf+="-FOO "+a+" FOO-"}var s=Mustache.to_html(text,context,{mypartial:partialText},send);is(buf,"-FOO abc bar def qux ghi FOO-","Correct emulation of Mustache.js sendFun.");function is(a,b,c){if(a===b){output("OK:   "+c);++passed}else{output("FAIL: "+c);output("Expected |"+b+"|");output("     Got |"+a+"|");++failed}}function complete(){output("\nTests Complete");output("--------------");output("Passed: "+passed);output("Failed: "+failed);output("\n")}complete();