describe("Timepicker feature",function(){var i,h,g,f,e,d,c,b,a;beforeEach(function(){loadFixtures("timepicker.html");i=$("#timepicker1");f=i.timepicker();c=f.data("timepicker");h=$("#timepicker2");e=h.timepicker({template:"modal",showSeconds:true,minuteStep:30,secondStep:30,defaultTime:false});b=e.data("timepicker");g=$("#timepicker3");d=g.timepicker({showMeridian:false,showSeconds:true,defaultTime:"13:25:15"});a=d.data("timepicker")});afterEach(function(){if(i.data("timepicker")!==undefined){i.data("timepicker").remove()}if(h.data("timepicker")!==undefined){h.data("timepicker").remove()}if(g.data("timepicker")!==undefined){g.data("timepicker").remove()}i.remove();h.remove();g.remove()});it("should be available on the jquery object",function(){expect($.fn.timepicker).toBeDefined()});it("should be chainable",function(){expect(f).toBe(i)});it("should have sensible defaults",function(){expect(c.defaultTime).toBeTruthy();expect(c.minuteStep).toBe(15);expect(c.secondStep).toBe(15);expect(c.disableFocus).toBe(false);expect(c.showSeconds).toBe(false);expect(c.showInputs).toBe(true);expect(c.showMeridian).toBe(true);expect(c.template).toBe("dropdown");expect(c.modalBackdrop).toBe(false);expect(c.modalBackdrop).toBe(false);expect(c.isOpen).toBe(false);expect(c.showWidgetOnAddonClick).toBe(true)});it("should allow user to configure defaults",function(){expect(b.template).toBe("modal");expect(b.minuteStep).toBe(30)});it("should be configurable with data attributes",function(){$("body").append('<div id="hi" class="bootstrap-timepicker"><input id="customTimepicker" data-template="modal" data-minute-step="30" data-modal-backdrop="true" data-show-meridian="true" type="text"/></div');var k=$("body").find("#customTimepicker"),j=k.timepicker().data("timepicker");expect($("body").find("#customTimepicker").length).toBe(1);expect(j.template).toBe("modal");expect(j.minuteStep).toBe(30,"data-minute-step not working");expect(j.modalBackdrop).toBe(true,"data-modal-backdrop not working");expect(j.showMeridian).toBe(true,"data-show-meridian not working");j.remove()});it("should have current time by default",function(){var j=new Date(),k=j.getHours(),m=j.getMinutes(),l;if(m!==0){m=Math.ceil(m/c.minuteStep)*c.minuteStep}if(m===60){k+=1;m=0}if(k<13){l="AM"}else{l="PM"}if(k>12){k=k-12}if(k===0){k=12}expect(c.hour).toBe(k);expect(c.minute).toBe(m);expect(c.meridian).toBe(l)});it("should not override time with current time if value is already set",function(){$("body").append('<div id="timepickerCustom"><input id="timepickerCustomInput" type="text" value="12:15 AM" /></div>');var k=$("#timepickerCustomInput").timepicker(),j=k.data("timepicker");expect(k.val()).toBe("12:15 AM");j.remove();$("#timepickerCustom").remove()});it("should have no value if defaultTime is set to false",function(){expect(h.val()).toBe("")});it("should be able to set default time with config option",function(){expect(a.getTime()).toBe("13:25:15")});it("should update the element and widget with the setTime method",function(){b.setTime("9:15:20 AM");expect(b.hour).toBe(9);expect(b.minute).toBe(15);expect(b.second).toBe(20);expect(b.meridian).toBe("AM");expect(h.val()).toBe("9:15:20 AM");expect(b.$widget.find(".bootstrap-timepicker-hour").val()).toBe("9");expect(b.$widget.find(".bootstrap-timepicker-minute").val()).toBe("15");expect(b.$widget.find(".bootstrap-timepicker-second").val()).toBe("20");expect(b.$widget.find(".bootstrap-timepicker-meridian").val()).toBe("AM")});it("should be able get & set the pickers time",function(){c.setTime("11:15 PM");expect(c.getTime()).toBe("11:15 PM");a.setTime("23:15:20");expect(a.getTime()).toBe("23:15:20");c.setTime("11pm");expect(c.getTime()).toBe("11:00 PM");a.setTime("11pm");expect(a.getTime()).toBe("23:00:00");c.setTime("11a");expect(c.getTime()).toBe("11:00 AM");a.setTime("11a");expect(a.getTime()).toBe("11:00:00");c.setTime("1");expect(c.getTime()).toBe("1:00 AM");a.setTime("1");expect(a.getTime()).toBe("1:00:00");c.setTime("13");expect(c.getTime()).toBe("12:00 AM");a.setTime("13");expect(a.getTime()).toBe("13:00:00");c.setTime("10:20p");expect(c.getTime()).toBe("10:20 PM");a.setTime("10:20p");expect(a.getTime()).toBe("22:20:00");c.setTime("10:20 p.m.");expect(c.getTime()).toBe("10:20 PM");a.setTime("10:20 p.m.");expect(a.getTime()).toBe("22:20:00");c.setTime("10:20a");expect(c.getTime()).toBe("10:20 AM");a.setTime("10:20a");expect(a.getTime()).toBe("10:20:00");c.setTime("10:2010");expect(c.getTime()).toBe("10:20 AM","setTime with 10:2010 on tp1");a.setTime("10:2010");expect(a.getTime()).toBe("10:20:10","setTime with 10:2010 on tp3");c.setTime("102010");expect(c.getTime()).toBe("10:20 AM","setTime with 102010 on tp1");a.setTime("102010");expect(a.getTime()).toBe("10:20:10","setTime with 102010 on tp3");c.setTime("2320");expect(c.getTime()).toBe("12:20 AM","setTime with 2320 on tp1");a.setTime("2320");expect(a.getTime()).toBe("23:20:00","setTime with 2320 on tp3");a.setTime("0:00");expect(a.getTime()).toBe("0:00:00","setTime with 0:00 on tp3")});it("should update picker on blur",function(){i.val("10:25 AM");expect(c.getTime()).not.toBe("10:25 AM");i.trigger("blur");expect(c.getTime()).toBe("10:25 AM")});it("should update element with updateElement method",function(){c.hour=10;c.minute=30;c.meridian="PM";c.updateElement();expect(i.val()).toBe("10:30 PM")});it("should update widget with updateWidget method",function(){b.hour=10;b.minute=30;b.second=15;expect(b.$widget.find(".bootstrap-timepicker-hour").val()).not.toBe("10");expect(b.$widget.find(".bootstrap-timepicker-minute").val()).not.toBe("30");expect(b.$widget.find(".bootstrap-timepicker-second").val()).not.toBe("15");b.updateWidget();expect(b.$widget.find(".bootstrap-timepicker-hour").val()).toBe("10");expect(b.$widget.find(".bootstrap-timepicker-minute").val()).toBe("30");expect(b.$widget.find(".bootstrap-timepicker-second").val()).toBe("15")});it("should update picker with updateFromElementVal method",function(){c.hour=12;c.minute=12;c.meridian="PM";c.update();i.val("10:30 AM");expect(c.$widget.find(".bootstrap-timepicker-hour").val()).not.toBe("10");expect(c.$widget.find(".bootstrap-timepicker-minute").val()).not.toBe("30");expect(c.$widget.find(".bootstrap-timepicker-meridian").val()).not.toBe("AM");expect(c.hour).not.toBe(10);expect(c.minute).not.toBe(30);expect(c.meridian).not.toBe("AM");c.updateFromElementVal();expect(c.$widget.find(".bootstrap-timepicker-hour").val()).toBe("10");expect(c.$widget.find(".bootstrap-timepicker-minute").val()).toBe("30");expect(c.$widget.find(".bootstrap-timepicker-meridian").val()).toBe("AM");expect(c.hour).toBe(10);expect(c.minute).toBe(30);expect(c.meridian).toBe("AM")});it("should update picker with updateFromWidgetInputs method",function(){c.hour=12;c.minute=12;c.meridian="PM";c.update();c.$widget.find(".bootstrap-timepicker-hour").val(10);c.$widget.find(".bootstrap-timepicker-minute").val(30);c.$widget.find(".bootstrap-timepicker-meridian").val("AM");expect(c.hour).not.toBe(10);expect(c.minute).not.toBe(30);expect(c.meridian).not.toBe("AM");expect(i.val()).not.toBe("10:30 AM");c.updateFromWidgetInputs();expect(c.hour).toBe(10);expect(c.minute).toBe(30);expect(c.meridian).toBe("AM");expect(i.val()).toBe("10:30 AM")});it("should increment hours with incrementHour method",function(){c.hour=9;c.incrementHour();expect(c.hour).toBe(10)});it("should decrement hours with decrementHour method",function(){c.hour=9;c.decrementHour();expect(c.hour).toBe(8)});it("should toggle meridian if hour goes past 12",function(){i.val("11:00 AM");c.updateFromElementVal();c.incrementHour();expect(c.hour).toBe(12);expect(c.minute).toBe(0);expect(c.meridian).toBe("PM")});it("should toggle meridian if hour goes below 1",function(){i.val("11:00 AM");c.updateFromElementVal();c.incrementHour();expect(c.hour).toBe(12);expect(c.minute).toBe(0);expect(c.meridian).toBe("PM")});it("should set hour to 1 if hour increments on 12 for 12h clock",function(){i.val("11:15 PM");c.updateFromElementVal();c.incrementHour();c.incrementHour();expect(c.getTime()).toBe("1:15 AM")});it("should set hour to 0 if hour increments on 23 for 24h clock",function(){g.val("22:15:30");a.updateFromElementVal();a.incrementHour();a.incrementHour();expect(a.hour).toBe(0);expect(a.minute).toBe(15);expect(a.second).toBe(30)});it("should increment minutes with incrementMinute method",function(){c.minute=10;c.incrementMinute();expect(c.minute).toBe(15);b.minute=0;b.incrementMinute();expect(b.minute).toBe(30)});it("should decrement minutes with decrementMinute method",function(){c.hour=11;c.minute=0;c.decrementMinute();expect(c.hour).toBe(10);expect(c.minute).toBe(45);b.hour=11;b.minute=0;b.decrementMinute();expect(b.hour).toBe(10);expect(b.minute).toBe(30)});it("should increment hour if minutes increment past 59",function(){i.val("11:55 AM");c.updateFromElementVal();c.incrementMinute();c.update();expect(c.getTime()).toBe("12:00 PM")});it("should toggle meridian with toggleMeridian method",function(){c.meridian="PM";c.toggleMeridian();expect(c.meridian).toBe("AM")});it("should increment seconds with incrementSecond method",function(){c.second=0;c.incrementSecond();expect(c.second).toBe(15);b.second=0;b.incrementSecond();expect(b.second).toBe(30)});it("should decrement seconds with decrementSecond method",function(){b.hour=11;b.minute=0;b.second=0;b.decrementSecond();expect(b.minute).toBe(59);expect(b.second).toBe(30)});it("should increment minute by 1 if seconds increment past 59",function(){h.val("11:55:30 AM");b.updateFromElementVal();b.incrementSecond();b.update();expect(b.getTime()).toBe("11:56:00 AM")});it("should not have any remaining events if remove is called",function(){var j=0;i.on("hide.timepicker",function(){j++});i.parents("div").find(".add-on").trigger("click");$("body").trigger("mousedown");expect(j).toBe(1);c.remove();b.remove();a.remove();$("body").trigger("click");expect(j).toBe(1)});it("should be able to reset time by using setTime 0/null",function(){c.hour=10;c.minute=30;c.meridian="PM";c.updateElement();i.timepicker("setTime",null);expect(c.getTime()).toBe("")});it("should not have the widget in the DOM if remove method is called",function(){c.showWidget();b.showWidget();a.showWidget();expect($("body")).toContain(".bootstrap-timepicker-widget");c.remove();b.remove();a.remove();expect($("body")).not.toContain(".bootstrap-timepicker-widget")});it("should be able to set time from a script",function(){i.timepicker("setTime","12:35 PM");c.update();expect(c.getTime()).toBe("12:35 PM")});it("should be able to opened from script",function(){expect(c.isOpen).toBe(false);i.timepicker("showWidget");expect(c.isOpen).toBe(true)})});